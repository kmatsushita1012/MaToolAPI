version: 0.2

env:
  variables:
    FUNCTION_NAME: "MaToolAPI"
    ALIAS_NAME: "dev"
    STAGE_NAME: "dev"
    API_NAME: "MaToolAPI"

phases:
  install:
    commands:
      - npm ci

  build:
    commands:
      - echo Build started on `date`
      - ./node_modules/.bin/tsc
      - mkdir -p deploy-package
      - cp -r dist/* deploy-package/
      - cp -r node_modules deploy-package/
      - cd deploy-package
      - zip -q -r ../lambda.zip .
      - cd ..
      - echo "Updating Lambda function code"
      - aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://lambda.zip
      - sleep 10

  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Publishing new version and updating alias"
      - CurrentVersion=$(aws lambda get-alias --function-name $FUNCTION_NAME --name $ALIAS_NAME --query 'FunctionVersion' --output text)
      - aws lambda publish-version --function-name $FUNCTION_NAME --description "Updated on `date`"
      - TargetVersion=$(aws lambda list-versions-by-function --function-name $FUNCTION_NAME --query 'Versions[-1].Version' --output text)
      - aws lambda update-alias --function-name $FUNCTION_NAME --name $ALIAS_NAME --function-version $TargetVersion
      - |
        if [ "$CurrentVersion" != "$TargetVersion" ]; then
          aws lambda delete-function --function-name $FUNCTION_NAME --qualifier $CurrentVersion
        fi
      - echo "Deploying API Gateway"
      - API_ID=$(aws apigatewayv2 get-apis --query "Items[?Name==\`$API_NAME\`].ApiId" --output text)
      - aws apigatewayv2 create-deployment --api-id $API_ID --stage-name $STAGE_NAME
